a goaloc entity needs to be able to encapsulate roughly what a merb slice does:  the model, view, and controller parts of an application.

it needs:

model:
associations
dbfields
validations
model_lifecycle_callbacks:  before_save, after_validate, etc..

controller:
list of actions to support
filters
destinations for the non-GET actions (delete, create, update ) (pretty much only 2 reasonable options for each)

view:
form, large and small individual representations, collection representation, optionally a layout

tests:
unit
functional
a coverage metric (how hard do you want this covered?)


An app has a collection of such entities, and also 
routes
plugins
gems
configuration


how does this play with javascript?  maybe better than rails.
how does this do continuation-based apps?


I should be able to indicate to the app that it will always have an instance of a given class, accessible by a given method_name

so, eg., when you install restful_auth, it can tell the app that there is a user available under current_user

actually, current_user makes sense in an app-from the point of view of any given controller, there will always be exactly one current user, so that should be visible in the framework and available to anyone.  

also, need to cope with roles, probably.  